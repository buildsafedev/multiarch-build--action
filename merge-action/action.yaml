name: 'Merge and Push Manifest'
description: 'Merge digests and push Docker manifest.'

inputs:
  oci_registry_username:
    description: 'DockerHub username'
    required: true
  oci_registry_password:
    description: 'DockerHub password'
    required: true
  image_name:
    description: 'Name of the Docker image'
    required: true
  tag:
    description: 'Tag of the Docker image'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Download meta bake definition
      uses: actions/download-artifact@v4
      with:
        name: bake-meta
        path: /tmp

    - name: Download digests
      uses: actions/download-artifact@v4
      with:
        path: /tmp/digests
        pattern: digests-*
        merge-multiple: true

    - name: Verify digest files after download
      shell: bash
      run: |
        echo "Downloaded digest files:"
        ls -l /tmp/digests/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.oci_registry_username }}
        password: ${{ inputs.oci_registry_password }}

    - name: Create manifest list and push
      shell: bash
      working-directory: /tmp/digests
      run: |
        tags=$(jq -cr '.target."docker-metadata-action".tags | map("-t " + "${{ inputs.image_name }}:${{ inputs.tag }}") | join(" ")' /tmp/bake-meta.json)
        
        if [[ -z "$tags" ]]; then
          echo "ERROR: No tags were generated."
          exit 1
        fi

        docker buildx imagetools create $tags $(printf '${{ inputs.image_name }}@sha256:%s ' *)

    - name: Inspect image
      shell: bash
      run: |
        docker buildx imagetools inspect ${{ inputs.image_name }}:${{ inputs.tag }}

    - name: Print Digest for Verification
      shell: bash
      run: |
        for file in /tmp/digests/*; do
          echo "Digest: $(basename $file)"
        done

    - name: Scan image with Grype
      shell: bash
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
        grype ${{ inputs.image_name }}:${{ inputs.tag }}
